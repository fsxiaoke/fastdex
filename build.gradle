/// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }




}

Properties props = new Properties()
try {
    props.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Throwable e) {
    e.printStackTrace()
}

def bintray_user = props.getProperty("BINTRAY_USER","")
def bintray_key = props.getProperty("BINTRAY_KEY","")



allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
    }


}

gradle.ext.mavenUrl = "http://maven.firstshare.cn/artifactory/libs-release-local"
gradle.ext.mavenDevUrl = "http://maven.firstshare.cn/artifactory/libs-snapshot-local"
gradle.ext.mavenUserName = "deployer"
gradle.ext.mavenPwd = "fxiaoke"

subprojects {

    apply plugin: 'maven'

    buildscript {
        /**
         * 发布到maven
         */
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: gradle.mavenUrl) {
                        authentication(userName: gradle.mavenUserName, password: gradle.mavenPwd)
                    }

                    snapshotRepository(url: gradle.mavenDevUrl) {
                        authentication(userName: gradle.mavenUserName, password: gradle.mavenPwd)
                    }


                }
            }
            doFirst {
                repositories.mavenDeployer.pom.version = "$project.version"
                repositories.mavenDeployer.pom.artifactId = "$project.name"
                repositories.mavenDeployer.pom.groupId = "$project.groupId"
            }
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}